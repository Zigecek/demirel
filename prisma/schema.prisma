generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
  output          = "../src/generated-prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model user {
  username String    @id @unique(map: "username") @db.VarChar(255)
  password String    @db.VarChar
  webpush  webpush[]
  rule     rule[]

  @@index([username])
}

model mqtt {
  id        Int           @id @default(autoincrement())
  topic     String
  value     Json          @db.JsonB
  timestamp DateTime      @db.Timestamptz
  valueType MqttValueType @default(FLOAT)

  @@unique([topic, timestamp])
  @@index([topic, timestamp])
}

enum MqttValueType {
  FLOAT
  BOOLEAN
}

// webpush
model webpush {
  id        Int      @id @default(autoincrement())
  data      Json     @db.JsonB
  timestamp DateTime @db.Timestamptz

  userId String
  user   user   @relation(fields: [userId], references: [username])

  @@index([userId])
}

model daily {
  id        Int           @id @default(autoincrement())
  topic     String
  valueType MqttValueType
  date      DateTime      @db.Timestamptz

  // FLOAT
  max   Float?
  min   Float?
  avg   Float?
  count Int?

  // BOOLEAN
  uptime       BigInt? @db.BigInt
  downtime     BigInt? @db.BigInt
  risingCount  Int?
  fallingCount Int?

  @@index([topic, date])
}

model nickname {
  topic    String @id @unique(map: "topic")
  nickname String

  @@index([topic])
}

enum ruleSeverity {
  INFO
  WARNING
  SERIOUS
}

model rule {
  id     Int    @id @default(autoincrement())
  userId String
  user   user   @relation(fields: [userId], references: [username])

  name              String
  notificationTitle String
  notificationBody  String
  severity          ruleSeverity @default(INFO)

  conditions String[]
  topics     String[]
}
